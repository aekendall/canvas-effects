// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Bezier = (function(_super) {
    __extends(Bezier, _super);

    function Bezier(config) {
      this.___init(config);
    }

    Bezier.prototype.___init = function(config) {
      Kinetic.Shape.call(this, config);
      this.className = 'Bezier';
      return this.sceneFunc(this._sceneFunc);
    };

    Bezier.prototype._sceneFunc = function(context) {
      var i, p, p0x, _i, _len, _results;
      p = this.getPoints();
      if (p.length % 8 !== 0) {
        throw new Error("Bezier points.length needs to be a multiple of 8, was '" + p.length + "'");
      }
      _results = [];
      for (i = _i = 0, _len = p.length; _i < _len; i = _i += 8) {
        p0x = p[i];
        context.beginPath();
        context.moveTo(p[i], p[i + 1]);
        context.bezierCurveTo(p[i + 2], p[i + 3], p[i + 4], p[i + 5], p[i + 6], p[i + 7]);
        _results.push(context.fillStrokeShape(this));
      }
      return _results;
    };

    return Bezier;

  })(Kinetic.Shape);

  Kinetic.Factory.addGetterSetter(Bezier, 'points');

}).call(this);

/*
//@ sourceMappingURL=bezier.map
*/
